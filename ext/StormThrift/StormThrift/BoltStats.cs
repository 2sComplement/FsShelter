/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace StormThrift
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class BoltStats : TBase
  {

    public Dictionary<string, Dictionary<GlobalStreamId, long>> Acked { get; set; }

    public Dictionary<string, Dictionary<GlobalStreamId, long>> Failed { get; set; }

    public Dictionary<string, Dictionary<GlobalStreamId, double>> Process_ms_avg { get; set; }

    public Dictionary<string, Dictionary<GlobalStreamId, long>> Executed { get; set; }

    public Dictionary<string, Dictionary<GlobalStreamId, double>> Execute_ms_avg { get; set; }

    public BoltStats() {
    }

    public BoltStats(Dictionary<string, Dictionary<GlobalStreamId, long>> acked, Dictionary<string, Dictionary<GlobalStreamId, long>> failed, Dictionary<string, Dictionary<GlobalStreamId, double>> process_ms_avg, Dictionary<string, Dictionary<GlobalStreamId, long>> executed, Dictionary<string, Dictionary<GlobalStreamId, double>> execute_ms_avg) : this() {
      this.Acked = acked;
      this.Failed = failed;
      this.Process_ms_avg = process_ms_avg;
      this.Executed = executed;
      this.Execute_ms_avg = execute_ms_avg;
    }

    public void Read (TProtocol iprot)
    {
      bool isset_acked = false;
      bool isset_failed = false;
      bool isset_process_ms_avg = false;
      bool isset_executed = false;
      bool isset_execute_ms_avg = false;
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Map) {
              {
                Acked = new Dictionary<string, Dictionary<GlobalStreamId, long>>();
                TMap _map58 = iprot.ReadMapBegin();
                for( int _i59 = 0; _i59 < _map58.Count; ++_i59)
                {
                  string _key60;
                  Dictionary<GlobalStreamId, long> _val61;
                  _key60 = iprot.ReadString();
                  {
                    _val61 = new Dictionary<GlobalStreamId, long>();
                    TMap _map62 = iprot.ReadMapBegin();
                    for( int _i63 = 0; _i63 < _map62.Count; ++_i63)
                    {
                      GlobalStreamId _key64;
                      long _val65;
                      _key64 = new GlobalStreamId();
                      _key64.Read(iprot);
                      _val65 = iprot.ReadI64();
                      _val61[_key64] = _val65;
                    }
                    iprot.ReadMapEnd();
                  }
                  Acked[_key60] = _val61;
                }
                iprot.ReadMapEnd();
              }
              isset_acked = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Map) {
              {
                Failed = new Dictionary<string, Dictionary<GlobalStreamId, long>>();
                TMap _map66 = iprot.ReadMapBegin();
                for( int _i67 = 0; _i67 < _map66.Count; ++_i67)
                {
                  string _key68;
                  Dictionary<GlobalStreamId, long> _val69;
                  _key68 = iprot.ReadString();
                  {
                    _val69 = new Dictionary<GlobalStreamId, long>();
                    TMap _map70 = iprot.ReadMapBegin();
                    for( int _i71 = 0; _i71 < _map70.Count; ++_i71)
                    {
                      GlobalStreamId _key72;
                      long _val73;
                      _key72 = new GlobalStreamId();
                      _key72.Read(iprot);
                      _val73 = iprot.ReadI64();
                      _val69[_key72] = _val73;
                    }
                    iprot.ReadMapEnd();
                  }
                  Failed[_key68] = _val69;
                }
                iprot.ReadMapEnd();
              }
              isset_failed = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Map) {
              {
                Process_ms_avg = new Dictionary<string, Dictionary<GlobalStreamId, double>>();
                TMap _map74 = iprot.ReadMapBegin();
                for( int _i75 = 0; _i75 < _map74.Count; ++_i75)
                {
                  string _key76;
                  Dictionary<GlobalStreamId, double> _val77;
                  _key76 = iprot.ReadString();
                  {
                    _val77 = new Dictionary<GlobalStreamId, double>();
                    TMap _map78 = iprot.ReadMapBegin();
                    for( int _i79 = 0; _i79 < _map78.Count; ++_i79)
                    {
                      GlobalStreamId _key80;
                      double _val81;
                      _key80 = new GlobalStreamId();
                      _key80.Read(iprot);
                      _val81 = iprot.ReadDouble();
                      _val77[_key80] = _val81;
                    }
                    iprot.ReadMapEnd();
                  }
                  Process_ms_avg[_key76] = _val77;
                }
                iprot.ReadMapEnd();
              }
              isset_process_ms_avg = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.Map) {
              {
                Executed = new Dictionary<string, Dictionary<GlobalStreamId, long>>();
                TMap _map82 = iprot.ReadMapBegin();
                for( int _i83 = 0; _i83 < _map82.Count; ++_i83)
                {
                  string _key84;
                  Dictionary<GlobalStreamId, long> _val85;
                  _key84 = iprot.ReadString();
                  {
                    _val85 = new Dictionary<GlobalStreamId, long>();
                    TMap _map86 = iprot.ReadMapBegin();
                    for( int _i87 = 0; _i87 < _map86.Count; ++_i87)
                    {
                      GlobalStreamId _key88;
                      long _val89;
                      _key88 = new GlobalStreamId();
                      _key88.Read(iprot);
                      _val89 = iprot.ReadI64();
                      _val85[_key88] = _val89;
                    }
                    iprot.ReadMapEnd();
                  }
                  Executed[_key84] = _val85;
                }
                iprot.ReadMapEnd();
              }
              isset_executed = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.Map) {
              {
                Execute_ms_avg = new Dictionary<string, Dictionary<GlobalStreamId, double>>();
                TMap _map90 = iprot.ReadMapBegin();
                for( int _i91 = 0; _i91 < _map90.Count; ++_i91)
                {
                  string _key92;
                  Dictionary<GlobalStreamId, double> _val93;
                  _key92 = iprot.ReadString();
                  {
                    _val93 = new Dictionary<GlobalStreamId, double>();
                    TMap _map94 = iprot.ReadMapBegin();
                    for( int _i95 = 0; _i95 < _map94.Count; ++_i95)
                    {
                      GlobalStreamId _key96;
                      double _val97;
                      _key96 = new GlobalStreamId();
                      _key96.Read(iprot);
                      _val97 = iprot.ReadDouble();
                      _val93[_key96] = _val97;
                    }
                    iprot.ReadMapEnd();
                  }
                  Execute_ms_avg[_key92] = _val93;
                }
                iprot.ReadMapEnd();
              }
              isset_execute_ms_avg = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
      if (!isset_acked)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
      if (!isset_failed)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
      if (!isset_process_ms_avg)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
      if (!isset_executed)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
      if (!isset_execute_ms_avg)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("BoltStats");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      field.Name = "acked";
      field.Type = TType.Map;
      field.ID = 1;
      oprot.WriteFieldBegin(field);
      {
        oprot.WriteMapBegin(new TMap(TType.String, TType.Map, Acked.Count));
        foreach (string _iter98 in Acked.Keys)
        {
          oprot.WriteString(_iter98);
          {
            oprot.WriteMapBegin(new TMap(TType.Struct, TType.I64, Acked[_iter98].Count));
            foreach (GlobalStreamId _iter99 in Acked[_iter98].Keys)
            {
              _iter99.Write(oprot);
              oprot.WriteI64(Acked[_iter98][_iter99]);
            }
            oprot.WriteMapEnd();
          }
        }
        oprot.WriteMapEnd();
      }
      oprot.WriteFieldEnd();
      field.Name = "failed";
      field.Type = TType.Map;
      field.ID = 2;
      oprot.WriteFieldBegin(field);
      {
        oprot.WriteMapBegin(new TMap(TType.String, TType.Map, Failed.Count));
        foreach (string _iter100 in Failed.Keys)
        {
          oprot.WriteString(_iter100);
          {
            oprot.WriteMapBegin(new TMap(TType.Struct, TType.I64, Failed[_iter100].Count));
            foreach (GlobalStreamId _iter101 in Failed[_iter100].Keys)
            {
              _iter101.Write(oprot);
              oprot.WriteI64(Failed[_iter100][_iter101]);
            }
            oprot.WriteMapEnd();
          }
        }
        oprot.WriteMapEnd();
      }
      oprot.WriteFieldEnd();
      field.Name = "process_ms_avg";
      field.Type = TType.Map;
      field.ID = 3;
      oprot.WriteFieldBegin(field);
      {
        oprot.WriteMapBegin(new TMap(TType.String, TType.Map, Process_ms_avg.Count));
        foreach (string _iter102 in Process_ms_avg.Keys)
        {
          oprot.WriteString(_iter102);
          {
            oprot.WriteMapBegin(new TMap(TType.Struct, TType.Double, Process_ms_avg[_iter102].Count));
            foreach (GlobalStreamId _iter103 in Process_ms_avg[_iter102].Keys)
            {
              _iter103.Write(oprot);
              oprot.WriteDouble(Process_ms_avg[_iter102][_iter103]);
            }
            oprot.WriteMapEnd();
          }
        }
        oprot.WriteMapEnd();
      }
      oprot.WriteFieldEnd();
      field.Name = "executed";
      field.Type = TType.Map;
      field.ID = 4;
      oprot.WriteFieldBegin(field);
      {
        oprot.WriteMapBegin(new TMap(TType.String, TType.Map, Executed.Count));
        foreach (string _iter104 in Executed.Keys)
        {
          oprot.WriteString(_iter104);
          {
            oprot.WriteMapBegin(new TMap(TType.Struct, TType.I64, Executed[_iter104].Count));
            foreach (GlobalStreamId _iter105 in Executed[_iter104].Keys)
            {
              _iter105.Write(oprot);
              oprot.WriteI64(Executed[_iter104][_iter105]);
            }
            oprot.WriteMapEnd();
          }
        }
        oprot.WriteMapEnd();
      }
      oprot.WriteFieldEnd();
      field.Name = "execute_ms_avg";
      field.Type = TType.Map;
      field.ID = 5;
      oprot.WriteFieldBegin(field);
      {
        oprot.WriteMapBegin(new TMap(TType.String, TType.Map, Execute_ms_avg.Count));
        foreach (string _iter106 in Execute_ms_avg.Keys)
        {
          oprot.WriteString(_iter106);
          {
            oprot.WriteMapBegin(new TMap(TType.Struct, TType.Double, Execute_ms_avg[_iter106].Count));
            foreach (GlobalStreamId _iter107 in Execute_ms_avg[_iter106].Keys)
            {
              _iter107.Write(oprot);
              oprot.WriteDouble(Execute_ms_avg[_iter106][_iter107]);
            }
            oprot.WriteMapEnd();
          }
        }
        oprot.WriteMapEnd();
      }
      oprot.WriteFieldEnd();
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("BoltStats(");
      sb.Append("Acked: ");
      sb.Append(Acked);
      sb.Append(",Failed: ");
      sb.Append(Failed);
      sb.Append(",Process_ms_avg: ");
      sb.Append(Process_ms_avg);
      sb.Append(",Executed: ");
      sb.Append(Executed);
      sb.Append(",Execute_ms_avg: ");
      sb.Append(Execute_ms_avg);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
